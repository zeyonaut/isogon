def! bitvec : nat -> '(* c1 rpointer)
	= |n| n :: |n| '(* c1 rpointer) {
		| 0        -> <RC #1>
		| suc @n.T -> <RC (bool & [T])>
	};

def! not : bool -> bool
	= |b| b :: |_| bool {
		| false -> true
		| true  -> false
	};

def! lower : bool -> 'bool
	= |b| b :: |_| 'bool {
		| false -> <false>
		| true  -> <true>
	};

def! is_even : nat -> bool
	= |n| n :: |_| bool {
		| 0        -> true
		| suc @n.x -> not x
	};

def! pred : nat -> nat
	= |n| n :: |_| nat {
		| 0        -> 0
		| suc @n.x -> n
	};

def! make_bitvec : |n : nat| -> '[bitvec n]
	= |n| n :: |n| nat & '[bitvec n] {
		| 0        -> pred n, <rc 0_1>
		| suc @n.v -> pred (v/.), <rc ([lower (is_even (v/.))], [v/!])>
	}/!;

[make_bitvec 8]
